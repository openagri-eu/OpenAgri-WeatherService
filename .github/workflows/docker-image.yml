name: Build weather srv image multi-platform

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: false
  release:
    types:
      - created

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      # Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Docker daemon with containerd snapshotter enabled
      - name: Set up Docker with containerd features
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": { "containerd-snapshotter": true }
            }

      # Setup QEMU for cross-platform emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Setup Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Normalize repo name to lowercase
      - name: Sanitize
        run: |
          echo "REPO_LOWER=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          SAFE_REF=$(echo "${GITHUB_REF_NAME}" | tr / -)
          echo "SAFE_REF=$SAFE_REF" >> $GITHUB_ENV

      # Build and push multi-platform image
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.x64
          push: true
          platforms: linux/amd64,linux/arm64       # <-- multi-platform
          tags: |
            ghcr.io/${{ env.REPO_LOWER }}:${{ env.SAFE_REF }}
            ${{ github.ref_name == 'main' && format('ghcr.io/{0}:latest', env.REPO_LOWER) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
