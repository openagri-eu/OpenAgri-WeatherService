name: Docker Multi-Platform CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: false
  release:
    types:
      - created

jobs:

  # -------------------------
  # AMD64 Build
  # -------------------------
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.build.outputs.image-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Normalize repo and sanitize branch
        run: |
          echo "REPO_LOWER=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          SAFE_REF=$(echo "${GITHUB_REF_NAME}" | tr / -)
          echo "SAFE_REF=$SAFE_REF" >> $GITHUB_ENV

      - name: Build and push AMD64 Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.x86_64
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ env.REPO_LOWER }}:${{ env.SAFE_REF }}
            ${{ github.ref_name == 'main' && format('ghcr.io/{0}:latest', env.REPO_LOWER) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # -------------------------
  # ARM64 Build (manual / self-hosted)
  # -------------------------
  build-arm64:
    if: ${{ github.event_name == 'workflow_dispatch' }}   # manual trigger
    # runs-on: [self-hosted, arm64]                        # your ARM64 runner
    runs-on: ubuntu-latest
    needs: build-amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Docker daemon with containerd snapshotter enabled
      - name: Set up Docker with containerd features
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": { "containerd-snapshotter": true }
            }

      # Setup QEMU for cross-platform emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Normalize repo and sanitize branch
        run: |
          echo "REPO_LOWER=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          SAFE_REF=$(echo "${GITHUB_REF_NAME}" | tr / -)
          echo "SAFE_REF=$SAFE_REF" >> $GITHUB_ENV

      - name: Build and push ARM64 Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.arm64
          push: true
          platforms: linux/arm64
          tags: |
            ghcr.io/${{ env.REPO_LOWER }}:${{ env.SAFE_REF }}
            ${{ github.ref_name == 'main' && format('ghcr.io/{0}:latest', env.REPO_LOWER) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # -------------------------
  # Create multi-arch manifest
  # -------------------------
  manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Normalize repo and sanitize branch
        run: |
          echo "REPO_LOWER=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          SAFE_REF=$(echo "${GITHUB_REF_NAME}" | tr / -)
          echo "SAFE_REF=$SAFE_REF" >> $GITHUB_ENV

      - name: Create multi-arch manifest
        run: |
          docker buildx imagetools create \
            ghcr.io/${{ env.REPO_LOWER }}:${{ env.SAFE_REF }} \
            ghcr.io/${{ env.REPO_LOWER }}:${{ env.SAFE_REF }}@amd64 \
            ghcr.io/${{ env.REPO_LOWER }}:${{ env.SAFE_REF }}@arm64
